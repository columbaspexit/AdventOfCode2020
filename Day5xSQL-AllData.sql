-- Advent of Code, 2020 ------------------
-- Day 5: : Binary Boarding --------------
-- via SQL Server-------------------------

-- Create table for the problem...
drop table if exists #Day5
create table #Day5(
  	BoardingPass varchar(10)
   ,rowBin varchar(7)
   ,colBin varchar(3)
   ,rowInt int default (0)
   ,colInt int default (0)
   ,SeatID int)
   
-- Okay, actually typing out all 717 boarding passes...
insert into #Day5(BoardingPass) values 
    ('FFBFFBFLLR'),('BFBFBFBRLR'),('FBFFBFBRRL'),('BBFFFBFLLR'),('BFFFFFBLRL'),('BFBBFBBRLR'),('FBFBFBBRRL'),('FBBBFBFLRL'),('BFFFFBBRRL'),('FBBBBBFLLR'),('FBFFFBFLLR'),('FFBBBFBLRR'),('BFFFBBFLRL'),('FFBBBFBLLL'),('FBFBBFFLRR'),('FBFBBBBLLR'),('FFBBBFFRLR'),('FBFBBFFRRL'),('FBBBFFFLRR'),('FFBBFFBLLR'),('BFBFBFBLLR'),('BFBBFFFLLL'),('FBFBBFBRRL'),('FFBBFFBLRR'),('FFFBFBBLRR'),('FFFFBBBRRL'),('BFBBBBFRLL'),('FBFBBFFLLR'),('FFFBFBBLLR'),('FFBFBBBRRL'),('BFFBBFFLLR'),('BFFFBBFLLR'),('FBBFBBFRRR'),('FFFBBFFRLL'),('BFBFBBFRRR'),('FBBFFBBRLR'),('FBFFBBFRRL'),('BFFFFBFLLR'),('BBFFBFBLRL'),('FBFBBBBLRL'),('FBFBFBFRLL'),('FFBFBFFLLR'),('BFBFBBBRLR'),('BFBBFFBLRR'),('FFBFBFFLLL'),('FFFFBBBLLR'),('FFBBBBBLRR'),('FFBFBBFLLR'),('BFFFBBBRLL'),('BFBFBFFLRR'),('FBBBBFFRLR'),('BFBFFBBRLL'),('FBFBBFBRRR'),('BFBFFBBLLL'),('BFBFBBFLRL'),('BBFFFFBLLR'),('FFFBFFFRLL'),('FBFFFBBRLL'),('FFFBBBBLRR'),('FBBBFBBLRL'),('BBFFBFFRRR'),('BFFBFFFLRR'),('FBBBBBBLLR'),('BFBBFFBLLL'),('BFFBBBFRLR'),('FBBBFFFLRL'),('BBFFFBFRRL'),('BBFFBFFRRL'),('FFBBFFFLRR'),('BBFFBFBRLR'),('BBFFFFBRLR'),('FFFFBBFLRL'),('FFBBBFBRRR'),('FFBFBBFLRR'),('FFFBBFBRRR'),('FBFFBFBRRR'),('BFFFFFBRRR'),('BFBFFBFLRL'),('FFBBBBBLLL'),('BFFFFBBRRR'),('FBFBFFBRLR'),('FBFFFFBLLR'),('FFFBFFFLLL'),('BFFFFFFLLR'),('BBFFFFBRRL'),('FBBFBBBRRL'),('BFFFFFFLLL'),('FBFBFFBLRR'),('FFFBBFFRLR'),('FBBFFBBLLL'),('BFBBBFFLRL'),('BFBFBBBRLL'),('FBFBBFFLLL'),('FFBBFFBRLL'),('BFFFFBBLLR'),('FFBBFBFLLL'),('FFFFBBBRRR'),('BFFFBBBLLL'),('BFFBBFBRLR'),('FFBBBFFLLR'),('FBBBFFBRLR'),('FFBFBFBRLL'),('FFFBFFFLRR'),('FFBBFBBLRL'),('BFFBFBFLRR'),('FFBFFFFRLR'),('BFBFFFFLLL'),('BFBBFBFRRR'),('BFBFBFFRLL'),('BFFFBFBRLL'),('FFBBFBFLRR'),('FFBFFFFRRL'),('BFBBBBFLLL'),('BFBFBFBRRR'),('FFFFBBFLRR'),('FBBBBFFLRL'),('BFBFFFBLRL'),('BFFBBFBRLL'),('FBFFBBFLLL'),('BFBBBBBLRL'),('FFBFBBBLLR'),('FBBFFBBLRR'),('FFBFFFBRRR'),('FFFBBBBRRR'),('FBBBBBBLRL'),('FFFBBFFLLL'),('BBFFBFBLRR'),('BFFBFFBRLR'),('FFBBFBBRLL'),('BFFBFBBRLR'),('FBFBFBFRRL'),('BFBBBFBRLL'),('FFFFBBBLRR'),('BBFFFFFLLR'),('FFBFFFFLLL'),('BFBBFBFRLR'),('FFBBBBFRLR'),('BFBFBBBLRL'),('FBBFFFFRLL'),('BFFFBBBLRL'),('FBBBBFBRLL'),('FFBFFFFRRR'),('BFFFBFBRLR'),('FBBBFBBLLL'),('FFBFFBBLLL'),('FBFFFBFRLL'),('FFFFBBBRLR'),('BBFFFBBLLL'),('BBFFFFBLRL'),('FBFBBBFRRL'),('BFBFFBBRLR'),('FBBFFBBLLR'),('BFFBBFFLLL'),('FFBFBBBLLL'),('BFFBFFFRRL'),('BFBBBFBRLR'),('FBFBBBFLLL'),('BFFBBBBLRR'),('BFFBFBFLLL'),('FFFBBBBLLR'),('BFFFBFFLLR'),('FFFBFBBRLL'),('FFBBBBFRRL'),('FBFBFBBLLR'),('BBFFBFFLRL'),('FBFBFBFLLR'),('FBFBFFFLLR'),('BFFFBFFLRR'),('BFFBFFBRRR'),('FFFFBBBLLL'),('FBBFBFFLLR'),('FFBBFBFRRL'),('BFBFBBBLRR'),('BFFFFFBRLR'),('BFBBBBFRRL'),('FFFBBBFLRR'),('FBBFBFBRLL'),('FFFBFFBRLR'),('BFFFFFFRRL'),('BFFBFBFRRL'),('BFBBBBBRRL'),('FBBFBFFRLL'),('FFBFBBBRRR'),('BBFFFBFLRL'),('FBBBFBFRRR'),('FBFFFFFLRL'),('FFFBBBBRLR'),('FBFFFFBLRR'),('FBBFFBBLRL'),('BFFFBBFRRL'),('FFFBFBFRRR'),('BFFBFFFRLL'),('BFBFBFFLLR'),('BFFBFBFRLL'),('FFBFFBBLRR'),('BFBBBBBLLR'),('FBBBFFBRRL'),('FFBBBFFRLL'),('BFFBFBFLLR'),('FFBBBBFRLL'),('BFBFFFBRLR'),('FBFFFFBLRL'),('FFFBBFBRLR'),('FFFBBFFLLR'),('BFBBBBFLRR'),('FFBFBFFRRR'),('BFFBBBBRLR'),('FBFFFFFRRL'),('BFFFFFBRLL'),('FFBBBBFLRL'),('BFFFBFBRRL'),('FFBFBFFLRL'),('FFFBFFBLLR'),('FBBBBFBRRL'),('FFFFBBFLLR'),('BFBFFBFRLR'),('FBFFBFBRLL'),('BFBBFBFLRL'),('FBBFBBFLLL'),('BFFFFFFRLL'),('FBBBBBBRLR'),('BFFFFBBRLL'),('FBFBBFFLRL'),('FBFFBBFLLR'),('FBFBFBBLLL'),('FFBBBFBLRL'),('FFBBBBFRRR'),('FFFFBBBLRL'),('BFBBBBFRLR'),('BFBFBBFLRR'),('FFFBBFFRRL'),('FFFBBFFRRR'),('FBBBBFBRRR'),('FFBBBBBRLL'),('FBBBFFBRLL'),('FBFBBFBLRR'),('BFFFBBBRRR'),('BFFBBBBLLR'),('BFFFFBFRLR'),('FFBFFFFLRR'),('BFBBBFBLRR'),('FBFFFBBRLR'),('FFBFFBFLRR'),('FFFBFBBLLL'),('BFFBFFBRLL'),('FBFFFBFLRR'),('FBBBFBFLLL'),('FBBFFBFLRR'),('FFBFBFBRLR'),('FFBBBBBRRR'),('BFFBFBBRRL'),('BFBFFBBRRR'),('BFFBBFBLRR'),('FBBFFFBRLL'),('FBBBBFFLLL'),('FBBBBBFLRR'),('FBFFBBBLLL'),('BFFBFFBLRR'),('BBFFFFBRRR'),('FBFFFBBLLL'),('FFFFBFBRRL'),('FBBFBBBRLR'),('FBFBFBFRLR'),('FBFFBFFRRR'),('BBFFFBFRLL'),('BFBBBFFRLR'),('FBBFFFFRRL'),('BBFFFFFLLL'),('FBBFFFBRLR'),('FFBFBFFRLR'),('BFBFBBFRRL'),('BFBBBBFLLR'),('BFFFBBFLRR'),('FBFBFBBLRR'),('FBBFFFBLRR'),('BFBFFBFLLR'),('BFBFBFBRRL'),('FBFBFFBLLR'),('FBBFBFBLRL'),('BFBFFFFRLR'),('BFFBBFBLLR'),('BFBBFBBRLL'),('BFBFBFFRRR'),('FFBBFBBLLR'),('FFBFBFFLRR'),('FFFBFFBLRR'),('BFBFFFFLLR'),('FBFBFFBRRL'),('FBFBFFFRRL'),('FBFFFFBRRR'),('FFBBFFFRRL'),('FFBFFBBRLR'),('BFBBBFFLRR'),('BBFFBFBRLL'),('FBBBBBFRRL'),('BBFFFFBRLL'),('FFBBBBFLLR'),('FBBBBFBRLR'),('FFBFFBFRLR'),('FFFFBFBRLR'),('FBBFBFBLRR'),('BFBBFBFLLR'),('FFBFBBFRRR'),('FFBBFBFRRR'),('FFBBBBBLLR'),('BFBBFFBLRL'),('BFFBBFFRLR'),('FFFBBFBRRL'),('BFFFFFBRRL'),('BFBBFFBRRL'),('BFFBFBBLLR'),('FBBFFFBRRR'),('FBBBFFFLLR'),('BFFFFFFRLR'),('FBBFFFFLRL'),('BFFFBBBLLR'),('BFFFBFBLLR'),('BFFFBFBLLL'),('FFFBFBFLRL'),('FBFBBBBRLR'),('FBFFFFFRLL'),('BFFBFFBLLL'),('FFBBFBBLLL'),('FBFFBFFRLL'),('FBFFBFBLLR'),('FFBBFBBLRR'),('FFBFFFFLLR'),('FBBFBFBRLR'),('FFBBBFBRRL'),('FBFBBFBRLL'),('FBFFBFFLLR'),('BFFBFBFRRR'),('FBBFBBBLLR'),('BFBBFFBRLR'),('BFFBBFBRRR'),('FBBBBFFLRR'),('BBFFFFFLRR'),('FBFFFFFRRR'),('FFBBFFFLLR'),('FFBFFBBRRL'),('FBBFBBFRRL'),('BFFFFFBLLL'),('FFFBBBFLLL'),('FBBBBFBLRR'),('FFFBBFFLRL'),('BFBBBFBLRL'),('FBBFBBFLRL'),('FBBFFBBRRR'),('FFBFBBFRLL'),('FBFFFFFLLL'),('FFFBBBFRLL'),('BFBBFBBRRR'),('FFFBBFBRLL'),('FFBBBFBRLL'),('FBBBBBBLRR'),('FBFBBBBRLL'),('FFBBFFFRRR'),('FFFBFFBLRL'),('FBBFBFFRLR'),('BFFFBFFRRR'),('BFFFBFFRLL'),('FBBBFFFRLR'),('FFBBFBBRRL'),('FFBBFFFRLL'),('FFBBFBFRLL'),('FBBFFBFLLL'),('FBFFBBBRRL'),('FBFBFFBRRR'),('FFBFBFFRLL'),('FFFBFFFRRR'),('FFBFFFBLRR'),('FFBFFFFRLL'),('FBFFFFBLLL'),('BFBBFFFLLR'),('BFBFBFBLRR'),('FBBFFFFLLR'),('FBBBBFBLLR'),('FBBBFBFRRL'),('BFBBBBBRLR'),('FBFFBFBLLL'),('FFBBFFFLLL'),('FFFFBBFRRR'),('FBFBBBFLRR'),('BBFFBBFLLL'),('FFBBBFBLLR'),('FBBFFFFLRR'),('FBBFBFBLLR'),('FFBFFFBLRL'),('FBFBBBFLLR'),('BFBBBFFLLR'),('BFFFFBBRLR'),('FBBFBFBLLL'),('FBBFFBFRLR'),('BFBBFFBRLL'),('FBBBBFFLLR'),('BFFBBBBLRL'),('FBBFBFBRRL'),('FBBFFBFLRL'),('FBBBFFFRRL'),('BFBFBFFLRL'),('BFBFFFFLRR'),('BBFFBFBLLL'),('BBFFBFFLLR'),('FBFBBFFRLL'),('BFFBBBFLLR'),('FFBFBBFRRL'),('FBFFBBBLRR'),('FBBBFBBLLR'),('FBFFFBBRRL'),('FFBBBBFLRR'),('BFBFFBFLRR'),('FFFBBBFLRL'),('FBFFBFFRRL'),('FBBFBFFLRL'),('FBBFFFBLRL'),('FFBBBFFRRR'),('BBFFFBFLLL'),('FBFFBFBLRR'),('BBFFBFBLLR'),('FBFFFFBRLR'),('BFFFFFFLRL'),('FBBFBBBLLL'),('BFBFFBBLRR'),('FFBBFFBRRL'),('BFFFBFBLRL'),('BFBBBBBRLL'),('FBFFFBBLRR'),('BFBBFBBLLR'),('FBBBFFBLLL'),('FBFFFBFRLR'),('FFBBBFFRRL'),('FFBFBBFLRL'),('FFBFBFBLLR'),('FBBFFBFRLL'),('FFBBBFFLLL'),('BFBBBBBLLL'),('FBBFFFBLLL'),('BFBFFFBLRR'),('FFBFFBFLRL'),('BFFFBBBRRL'),('BFBFBBBLLR'),('BFBFFFFLRL'),('BFBFBFFRLR'),('FBBFBBBRLL'),('FFBFBBBLRL'),('FBBBFFFRRR'),('FBBFBFFRRR'),('FFFFBBBRLL'),('FBFFBBBLRL'),('FBBBFBBRRL'),('FBFFBBBLLR'),('FFFBBBFRLR'),('BFBFBFBLLL'),('BBFFFFFRRR'),('BFBBFBFRLL'),('FBBBFBBLRR'),('BFFFFBFLRL'),('FBBBFFBLRL'),('BBFFBFFLRR'),('FFBFBFFRRL'),('FBFFFBBLRL'),('FFFFBBFRLL'),('FFBFFFBLLR'),('FBBBFBFLRR'),('FFFBFFBRRR'),('BFFBBBFLRR'),('FBFFBFBLRL'),('FFBFFFBRLR'),('FFBFFFBRRL'),('FFBBFFBLRL'),('FBFBFBBRLR'),('FFFBBBBLLL'),('BFBBBFFLLL'),('FFBBFBFLRL'),('BFBFFFBRLL'),('BFFBFFBRRL'),('FBBFFFFLLL'),('FBFFFFBRRL'),('FFFBFFFLLR'),('FBFFFBFLRL'),('FFBFBFBLRL'),('FBBBFFBLRR'),('BFBFFBBRRL'),('BBFFFFFLRL'),('BFFBBBFRRR'),('BFFFBBFRLR'),('BFBBBBBLRR'),('BFFFBFBLRR'),('FBBBBFFRLL'),('BFBBFFFLRR'),('BBFFFBFLRR'),('FBFFBBFRLL'),('FBFFFFFLRR'),('FBBBBBFLLL'),('FBFBFBBRRR'),('FBFBBFBLRL'),('BFBBFFBRRR'),('BBFFBFFLLL'),('FBBFBBFLLR'),('BFFBBFFRLL'),('FBFBBBBRRL'),('FBBFBBFRLL'),('FBBFBBFLRR'),('FBBFFBBRRL'),('FFFBBFFLRR'),('BFBBFBFLRR'),('BFBFBFFRRL'),('FFBBFFFRLR'),('FBFBBBBLRR'),('BBFFFFBLLL'),('BBFFFFFRLR'),('FBFBFFBLRL'),('FBBFBBBLRR'),('BFBFFBFRRL'),('BFFFFFFLRR'),('FFFBBBFLLR'),('FBFFBFFLLL'),('BFFBFFFRLR'),('FBBFFBFRRR'),('FFFBFFFRRL'),('FFFFBBFLLL'),('BFBFBBFRLL'),('BFFFFBBLRL'),('FFFBFBFLLR'),('FBBBFBFRLR'),('BFBBBFBLLR'),('BFFBFBFLRL'),('BFBFFFBLLL'),('FFBFFBBLRL'),('BFBBFFFRRR'),('FFFBFFBLLL'),('BBFFFFBLRR'),('FFBBFBFLLR'),('FBFBBBBRRR'),('FBFBBBFLRL'),('BFFBFFFLLR'),('FBFBFFFRLL'),('FBBBBFBLLL'),('FBBBBBBRRR'),('FBBBBBFLRL'),('BFBBFFFRLL'),('FFFBFFFRLR'),('FFBFFBBLLR'),('FFBFBBBRLL'),('BBFFFFFRLL'),('FFFBFBBRLR'),('FFBFBBBRLR'),('BFFFFBFLRR'),('BBFFFBBLRL'),('FBBBBFFRRL'),('FBBFBBBRRR'),('BFBFFFFRLL'),('FBBBBBBRRL'),('BFFBFFBLRL'),('BFFBBFBRRL'),('FBFFFBBRRR'),('BFFBBFBLLL'),('BFBFBFBRLL'),('BBFFFBBRLL'),('FBFBBBBLLL'),('BBFFFBBLRR'),('BFFFFBFRRL'),('BFBBFBFLLL'),('FBBBFBBRLR'),('BFBBFBBLRL'),('BFBBBFBRRL'),('FBFFBBBRLL'),('FBBBFBBRLL'),('FFBBBBBRRL'),('FBFBBBFRLL'),('BFFFFFBLLR'),('BFFBBBBRRR'),('BFBBFBBLLL'),('FFBFBBBLRR'),('FFBFBFBRRR'),('BFBFFFBRRL'),('FBBBFFBRRR'),('BFBFBBBLLL'),('BBFFFBBRLR'),('BBFFFBBRRL'),('FBBBBFBLRL'),('FBBBBFFRRR'),('FBBBFFBLLR'),('BFFFFBFLLL'),('BFBFBFFLLL'),('BFFFFBFRLL'),('BFFBFBBLRL'),('FFBFFBBRLL'),('FBFBBFFRLR'),('BFBFFFBRRR'),('FBFFBFBRLR'),('FBBFBFFLLL'),('FBFFBBFLRR'),('FFBFBFBLRR'),('FFBBFFBRRR'),('FBBFFFBLLR'),('FBFFFBFRRR'),('BFBFFFFRRL'),('FBBBBBFRRR'),('FFFFBFBRRR'),('FFBBBBBLRL'),('FBFBFFFLRR'),('FBBBFFFLLL'),('BFFFBFFRLR'),('FFBFFBFRRL'),('FBFBFFFRRR'),('FFBFBFBLLL'),('BFBBBFFRRL'),('BFBFBFBLRL'),('BFFFBFFLRL'),('FBBBBBFRLR'),('FBFBBFBLLL'),('FFFBBBBLRL'),('FBBFBFFLRR'),('BFBBBFBRRR'),('FBBBFBBRRR'),('FFFBFBFRLL'),('FFBBBBFLLL'),('FBFFBFFRLR'),('FBFBFBFLLL'),('FBFFFFBRLL'),('FBBBBBBRLL'),('FBBBBBFRLL'),('FBBFFBFLLR'),('BFFBBBFRRL'),('FBFFFBFLLL'),('FBBBFFFRLL'),('BFFFBBBRLR'),('FBFBBBFRRR'),('BFFBFBBRLL'),('FBBFFFBRRL'),('FBFFBBBRLR'),('BFBFFBBLRL'),('BFFBBFFLRL'),('FBFBBBFRLR'),('BBFFFBBLLR'),('FFFBFFBRLL'),('BFBFBBFLLL'),('BFFBBFBLRL'),('FFFBBFBLRL'),('BFBBBFFRRR'),('FBFBFFFRLR'),('BFFBBFFLRR'),('BFFBBBFLLL'),('FBFFBBBRRR'),('FBFBFFFLLL'),('FFBFBBFLLL'),('FBFFFFFLLR'),('BFBBFBFRRL'),('BFBBBBBRRR'),('BFFBFBBLLL'),('BFFFBFBRRR'),('FFFBFBFLLL'),('FFBFFFBRLL'),('FBBFBFBRRR'),('FBBBBBBLLL'),('FBFBFFFLRL'),('FFFBFFBRRL'),('FBFBBFFRRR'),('FFBBFBFRLR'),('BFFFFBBLLL'),('FBBFBFFRRL'),('BFFBFFFRRR'),('BFFBFFFLRL'),('BFBBBBFRRR'),('BFBFBBBRRL'),('FFFBBFBLLL'),('FBBFFBBRLL'),('BFBBBFFRLL'),('BFFFBBFRRR'),('FBFBFBBRLL'),('BFFFBFFRRL'),('FFFBFBBLRL'),('FBFFFBBLLR'),('BFFFBBFLLL'),('BFFBFFFLLL'),('BFFBBBBLLL'),('BFFFFFFRRR'),('FFBFFBFRLL'),('FBBFFBFRRL'),('BBFFFFFRRL'),('FFFBBFBLRR'),('BFBFFBFLLL'),('FBFBBFBRLR'),('BFBBFBBLRR'),('FBFFBFFLRL'),('BFBFFFBLLR'),('FFFBBBFRRR'),('FFBBBFFLRR'),('FBFBFFBLLL'),('BFBFBBFRLR'),('FBFBFBFRRR'),('FFBBFBBRRR'),('FBBFFFFRLR'),('FBFBFBBLRL'),('FBBFFFFRRR'),('FFBBFFBRLR'),('BFBFBBFLLR'),('BFFBFBFRLR'),('BBFFBFFRLL'),('BFFBBFFRRR'),('BFFFFBFRRR'),('FBFBFBFLRL'),('FFBFFBFRRR'),('FBBFBBBLRL'),('FFFBBBFRRL'),('FBFFBFFLRR'),('FFBFBBFRLR'),('BBFFBFBRRL'),('FBFFBBFLRL'),('FFFFBBFRRL'),('BFBFFBFRLL'),('BFBBFBBRRL'),('FFFBBFBLLR'),('FFBFFBFLLL'),('FFBBBBBRLR'),('BFFFFFBLRR'),('BFFBBBFLRL'),('BFBBFFBLLR'),('FBFFFFFRLR'),('FFFFBBFRLR'),('FBFFFBFRRL'),('BFFBBBBRRL'),('FFBFFFFLRL'),('BFBBFFFRRL'),('FFFBBBBRLL'),('BFBFBBBRRR'),('BBFFFBFRLR'),('BFFBFFBLLR'),('FBFBBFBLLR'),('BFFBFBBRRR'),('BBFFFBFRRR'),('BFFBBFFRRL'),('FBBBFBFRLL'),('FFBFFFBLLL'),('BFFBBBFRLL'),('FBFFBBFRRR'),('FFFBFBFLRR'),('BFFBFBBLRR'),('FBFFBBFRLR'),('FFFBFBFRRL'),('FFFBBBBRRL'),('BFBFFBBLLR'),('BFBFFFFRRR'),('FFBBBFFLRL'),('FBBFBBFRLR'),('FFFBFFFLRL'),('BFFBBBBRLL'),('BFBBFFFRLR'),('FFBFFBBRRR'),('FBFBFFBRLL'),('BFFFBFFLLL'),('FFBFBFBRRL'),('FFFBFBBRRL'),('BFBBBBFLRL'),('BBFFBFFRLR'),('BFFFBBFRLL'),('BFFFBBBLRR'),('BFBFFBFRRR'),('FBBBFBFLLR'),('BFBBFFFLRL'),('FFFBFBFRLR'),('FBFBFBFLRR'),('BBFFBFBRRR'),('BBFFFBBRRR'),('FFBBFFBLLL'),('BFBBBFBLLL'),('FFBBFFFLRL'),('FFFBFBBRRR'),('FFBBBFBRLR'),('FFBBFBBRLR')

-- Recode the F/Bs & L/Rs as 0/1s and convert it all to integers...
declare @rowChars int = 7 -- Row number encoded in first 7 chars
declare @colChars int = 3 -- Column number encoded in last 3 chars

update #Day5
  set rowBin = replace(replace(left(BoardingPass,@rowChars),'F','0'),'B','1')
      ,colBin = replace(replace(right(BoardingPass,@colChars),'L','0'),'R','1')

-- I don't know how to convert literal binary to hex binary
-- (to take advantage of the convert function, thx SQL Server! >.<),
-- so manually converting rowBin and colBin to decimal numbers.
declare @i int = 0
while @i < @rowChars
begin
    update #Day5
    	set rowInt = rowInt + left(right(rowBin,@i+1),1) * power(2,@i)
    set @i = @i + 1
    if @i >= @rowChars break
    else continue
end 

set @i = 0
while @i < @colChars
begin
    update #Day5
    	set colInt = colInt + left(right(colBin,@i+1),1) * power(2,@i)
    set @i = @i + 1
    if @i >= @colChars break
    else continue
end 

update #Day5
	set SeatID = rowInt * 8 + colInt

-- Check the seq to SeatID mapping is correct...
select 'Error! SeatID maps to two boarding passes'[No Results = WIN]
    ,SeatID,count(*)
from #Day5
group by SeatID
having count(*) > 1

-- Question 1: Max seatID?
select top 1 SeatID [Max SeatID]
from #Day5
order by SeatID desc

-- Question 2: Your SeatID will be one less than the (only?)
-- SeatID with a gap of 2 between it and the previous SeatID...
;with cte as(
	select SeatID
    	,SeatID - lag(SeatID,1,null) over(order by SeatID) [idGap]
	from #Day5
)
select (SeatID - 1)[Your SeatID]
from cte 
where idGap = 2
